# NEETAI Agent Communication Protocol v1.0
# Defines standardized communication patterns between agents in the NEETAI ecosystem

apiVersion: "neetai.protocols/v1"
kind: "CommunicationProtocol"
metadata:
  name: "neetai-agent-communication"
  version: "1.0"
  created: "2024-01-01T00:00:00Z"
  
spec:
  # Message Format Specification
  message_format:
    standard_message:
      schema_version: "1.0"
      message_id: "uuid"
      timestamp: "iso8601"
      source_agent: "agent_identifier"
      target_agent: "agent_identifier" 
      message_type: "request|response|event|broadcast"
      priority: "critical|high|medium|low"
      correlation_id: "uuid" # for request-response correlation
      payload: "json_object"
      metadata:
        retry_count: "integer"
        timeout: "duration_in_seconds"
        encryption: "boolean"
        
    request_message:
      extends: "standard_message"
      message_type: "request"
      action: "string" # specific action requested
      parameters: "json_object"
      expected_response_format: "json_schema"
      
    response_message:
      extends: "standard_message"  
      message_type: "response"
      correlation_id: "required"
      status: "success|error|partial"
      result: "json_object"
      error_details: "json_object" # if status is error
      
    event_message:
      extends: "standard_message"
      message_type: "event"
      event_type: "string"
      event_data: "json_object"
      
    broadcast_message:
      extends: "standard_message"
      message_type: "broadcast"
      broadcast_scope: "all|category|specific_agents"
      target_agents: "array_of_agent_ids" # if specific_agents
      
  # Communication Patterns
  communication_patterns:
    
    # Direct Agent-to-Agent Communication
    direct_communication:
      pattern: "request_response"
      transport: "http_rest|grpc|message_queue"
      authentication: "mutual_tls|oauth2|api_key"
      retry_policy:
        max_attempts: 3
        backoff_strategy: "exponential"
        retry_interval: "1s,2s,4s"
        
    # Orchestrated Workflows
    orchestrated_workflows:
      pattern: "workflow_orchestration"
      orchestrator: "bmad-master-agent"
      workflow_steps:
        - step_id: "integer"
          agent: "agent_identifier"
          action: "string"
          inputs: "json_object"
          outputs: "json_object"
          dependencies: "array_of_step_ids"
          timeout: "duration"
          retry_policy: "object"
          
    # Event-Driven Communication
    event_driven:
      pattern: "publish_subscribe"
      transport: "message_broker"
      event_topics:
        - "student.performance.updated"
        - "content.created"
        - "assessment.completed"
        - "system.alert"
        - "user.action"
      message_ordering: "partition_key_based"
      delivery_guarantee: "at_least_once"
      
    # Broadcast Communication
    broadcast:
      pattern: "one_to_many"
      use_cases: ["system_announcements", "emergency_alerts", "configuration_updates"]
      delivery_method: "best_effort|guaranteed"
      
  # Agent Interaction Types
  interaction_types:
    
    # Synchronous Interactions
    synchronous:
      - name: "data_validation"
        description: "Real-time validation of educational content"
        participants: ["content-management", "education-strategy", "qa-specialist"]
        timeout: "30s"
        
      - name: "user_authentication"
        description: "User login and authorization"
        participants: ["security-specialist", "customer-support"]
        timeout: "10s"
        
      - name: "performance_optimization"
        description: "Real-time performance tuning"
        participants: ["mobile-development", "performance-engineering"]
        timeout: "60s"
        
    # Asynchronous Interactions  
    asynchronous:
      - name: "content_generation"
        description: "AI-powered content creation and review"
        participants: ["ai-ml-specialist", "content-management", "education-strategy"]
        expected_duration: "5-30 minutes"
        
      - name: "analytics_processing"
        description: "Student performance analysis and insights"
        participants: ["educational-analytics", "ai-ml-specialist", "product-strategy"]
        expected_duration: "10-60 minutes"
        
      - name: "compliance_audit"
        description: "Regular compliance and security audits"
        participants: ["compliance-specialist", "security-specialist", "qa-specialist"]
        expected_duration: "1-24 hours"
        
    # Workflow-Based Interactions
    workflows:
      - name: "student_onboarding"
        description: "Complete student registration and setup"
        steps:
          1: 
            agent: "customer-support"
            action: "initiate_onboarding"
          2:
            agent: "security-specialist" 
            action: "verify_identity"
          3:
            agent: "educational-analytics"
            action: "create_learning_profile"
          4:
            agent: "ai-ml-specialist"
            action: "generate_personalized_plan"
            
      - name: "feature_development"
        description: "End-to-end feature development process"
        steps:
          1:
            agent: "product-strategy"
            action: "define_requirements"
          2:
            agent: "mobile-development"
            action: "implement_feature"
          3:
            agent: "qa-specialist"
            action: "test_feature"
          4:
            agent: "devops-specialist"
            action: "deploy_feature"
            
  # Message Routing and Discovery
  routing:
    service_discovery:
      mechanism: "dns_based|consul|kubernetes_services"
      health_checks: "enabled"
      load_balancing: "round_robin|least_connections|weighted"
      
    message_routing:
      routing_key_format: "{agent_category}.{agent_name}.{action}"
      routing_strategies:
        - "direct_routing" # point-to-point
        - "topic_routing" # publish-subscribe
        - "content_based_routing" # based on message content
        
    circuit_breaker:
      enabled: true
      failure_threshold: 5
      timeout: "30s"
      recovery_timeout: "60s"
      
  # Security and Authentication
  security:
    authentication:
      method: "mutual_tls|oauth2_client_credentials"
      certificate_management: "automated_renewal"
      token_expiration: "1h"
      
    authorization:
      model: "rbac"
      permission_granularity: "agent_level|action_level"
      
    encryption:
      in_transit: "tls_1_3"
      message_encryption: "aes_256_gcm"
      key_management: "automated_rotation"
      
    audit_logging:
      enabled: true
      log_level: "info|debug"
      retention_period: "90_days"
      
  # Error Handling and Resilience
  error_handling:
    error_categories:
      - "network_error"
      - "timeout_error" 
      - "authentication_error"
      - "authorization_error"
      - "validation_error"
      - "processing_error"
      - "resource_exhaustion"
      
    retry_strategies:
      exponential_backoff:
        initial_delay: "1s"
        max_delay: "30s"
        multiplier: 2
        jitter: "10%"
        
    fallback_mechanisms:
      - "cached_response"
      - "default_response"
      - "alternative_agent"
      - "graceful_degradation"
      
    circuit_breaker_patterns:
      - "fail_fast"
      - "fail_safe"
      - "fail_silent"
      
  # Monitoring and Observability
  observability:
    metrics:
      - "message_throughput"
      - "message_latency"
      - "error_rate"
      - "agent_availability"
      - "workflow_completion_time"
      
    tracing:
      enabled: true
      trace_context_propagation: "w3c_trace_context"
      sampling_rate: "10%"
      
    logging:
      structured_logging: true
      log_format: "json"
      correlation_id_tracking: true
      
  # Quality of Service
  qos:
    priority_levels:
      critical: 
        max_latency: "1s"
        retry_attempts: 5
      high:
        max_latency: "5s" 
        retry_attempts: 3
      medium:
        max_latency: "30s"
        retry_attempts: 2
      low:
        max_latency: "300s"
        retry_attempts: 1
        
    rate_limiting:
      enabled: true
      default_rate: "100_requests_per_minute"
      burst_capacity: "150_requests"
      
    message_deduplication:
      enabled: true
      dedup_window: "5_minutes"
      dedup_key: "message_id|correlation_id"